pipeline {
  agent {
    docker {
    image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL      = "http://192.168.1.39:9000"
    DOCKER_IMAGE   = "kamran623/ultimate-cicd:${BUILD_NUMBER}"
    APP_DIR        = "java-maven-sonar-argocd-helm-k8s/spring-boot-app"
    MANIFEST_PATH  = "java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"
    GIT_REPO_NAME  = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME  = "kamran90-web"
  }

  stages {

    stage('Checkout') {
      steps {
        git branch: 'main', url: "https://github.com/${env.GIT_USER_NAME}/${env.GIT_REPO_NAME}.git"
      }
    }

    stage('Verify Docker Access') {
      steps {
        sh 'docker version'
      }
    }

    stage('Build and Test') {
      steps {
        dir("${env.APP_DIR}") {
          sh 'mvn clean package'
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        dir("${env.APP_DIR}") {
          sh 'docker build -t $DOCKER_IMAGE .'
        }
        script {
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      agent any
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "kammy2cool@gmail.com"
            git config user.name "Kamran saeed"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" $MANIFEST_PATH
            git add $MANIFEST_PATH
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}


